{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,MAAM,UAAU,KAAK;IACnB,OAAO,wBAAwB,CAAC,KAAK,EAAE,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,IAAY;IACtC,OAAO,wBAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,IAE5C;IACC,OAAO,MAAM,wBAAwB,CAAC,sBAAsB,CAC1D,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,CACnC,CAAC;AACJ,CAAC;AAgBD,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC","sourcesContent":["import ExpoShareExtensionModule from \"./ExpoShareExtensionModule\";\n\nexport function close(): void {\n  return ExpoShareExtensionModule.close();\n}\n\nexport function openHostApp(path: string): void {\n  return ExpoShareExtensionModule.openHostApp(path);\n}\n\nexport async function clearAppGroupContainer(args?: {\n  cleanUpBefore?: Date;\n}): Promise<void> {\n  return await ExpoShareExtensionModule.clearAppGroupContainer(\n    args?.cleanUpBefore?.toISOString(),\n  );\n}\n\nexport interface IExtensionPreprocessingJS {\n  run: (args: { completionFunction: (data: unknown) => void }) => void;\n  finalize: (args: unknown) => void;\n}\n\nexport type InitialProps = {\n  files?: string[];\n  images?: string[];\n  videos?: string[];\n  text?: string;\n  url?: string;\n  preprocessingResults?: unknown;\n};\n\nexport { Text } from \"./ui/text\";\nexport { TextInput } from \"./ui/text-input\";\nexport { View } from \"./ui/view\";"]}